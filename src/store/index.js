import {defineStore} from 'pinia'import request from '../utils/request'// 第一个参数 容器id,必须唯一export const usePlayStore = defineStore('play', {  state: () => {    return {      playList: [{        id: '',        name: '',        imgSrc: '',        src: '',        singerId: '',        createTime: '',        time: '',        singer: {          id: '',          name: '',          imgSrc: '',        },      }],      playing: {        id: '',        name: '',        imgSrc: '',        src: '',        singerId: '',        createTime: '',        time: '',        lyric: '',        isLove: false,        singer: {          id: '',          name: '',          imgSrc: '',        },      },      playMode: 0,      played: [],      audio: '',      isPaused: '',      isDark: false,    }  },  getters: {},  actions: {    nextSong(){      document.getElementById('lyric-parent').innerHTML = ''      this.$patch(state => {        if(state.playMode === 0 || state.playMode === 2){          let index = state.playList.indexOf(state.playing)          if(index !== -1){            if(index === state.playList.length - 1){              index = 0            }else {              index += 1            }            state.playing = state.playList[index]            state.played.push(index)          }        }else if(state.playMode === 1){          let index = Math.floor(Math.random() * state.playList.length)          if(index in state.played){            index = Math.floor(Math.random() * state.playList.length)          }          state.playing = state.playList[index]          state.played.push(index)        }        state.audio.play()        state.isPaused = true      })    },    preSong(){      document.getElementById('lyric-parent').innerHTML = ''      this.$patch(state => {        if(state.played.length > 1){          let index = state.played.length - 2          state.played.length -= 1          state.playing = state.playList[state.played[index]]        }else {          let index = state.playList.indexOf(state.playing)          if(index === 0){            index = state.playList.length - 1          }else {            index -= 1          }          state.playing = state.playList[index]        }        state.audio.play()        state.isPaused = true      })    },    play(playList, playing){      document.getElementById('lyric-parent').innerHTML = ''      this.$patch(state => {        state.played = []        state.playList = playList        state.playing = playing        state.played.push(playList.indexOf(playing))        state.audio.play()        state.isPaused = true      })    },    reset(){      this.$patch(state => {        state.playList = []        state.playing = {          id: '',          name: '',          imgSrc: '',          src: '',          singerId: '',          createTime: '',          time: '',          singer: {            id: '',            name: '',            imgSrc: '',          },        }        state.played = []      })    },    remove(id) {      request.get('/songCollect/removeLoveMusic/' + id).then(res => {})    },    add(id) {      request.get('/songCollect/addLoveMusic/' + id).then(res => {})    }  },})